登入数据库的时候，就已经要有登录人的用户名，而且要有当前的默认连接到的数据库，所以userName和dbName要静态
构造函数私有化，防止table类在外部被实例化，进一步的作用？？？
Table的createTable方法：{
为什么要是静态方法？ 因为一开始可能是没有Table对象的，而且构造函数private,在这种情况下要想执行createTable方法建表，只能通过静态方法
static void init(String userName,String dbName)可能也是因为这个原因static
如何调用该函数？
https://blog.csdn.net/cys1991/article/details/7593790创建真实目录
为什么要同时有fieldMap和dictFile？可能是要用在索引里？
FileWriter&PrintWriter：字符流和过滤流什么意思？为什么不直接用FileWriter写入文件，println方法有什么好处吗？
https://www.oschina.net/question/101123_17855（PrintWriter 的write()方法和println()方法）
--------------------------------------------------------------2019.10.27
10.28
FileWriter是字符输出流，PrintWriter：字符打印流
PrintWriter中的write方法(继承自父类Writer)和print方法等同，但是它的println方法在print方法基础上调用了newline方法，newline调用了flush方法刷新流
根据https://blog.csdn.net/evilcry2012/article/details/78455742
FileWriter作为字符输出的结点流类，继承自OutputStreamWriter，本身没有重写任何父类的方法，基本等价于父类，
至于它们存在的意义只是为了方便理解，一看就知道是用来写入字符文件的类！！！
FileWriter 很明显是针对文件的封装;PrintWriter 则更普遍一点
PrintWriter pw=new PrintWriter(new FileWriter())作用是：FileWriter用于写文件，字符输出节点流类；在此基础上用PrintWriter封装，就可以调用print系方法
如println
FileWriter的write方法继承自OutputStreamWriter,（OutputStreamWriter继承自Writer）OutputStreamWriter的write方法来自StreamEncoder的implWrite
PrintWriter的write方法是重写Writer的write方法

覆盖/重写/override 父子类中的同名方法，函数名/参数列表/返回类型/抛出异常必须完全相同，被重写的权限要大于重写的权限，所以被重写的不能是private
静态方法不能被重写
重载/overload：同一个类中同名但是不同参数的方法（可以是个数/类型/顺序不同），参数列表必须不同，跟返回值/访问权限/抛出异常没有关系
https://blog.csdn.net/dawn_after_dark/article/details/74357049没看完
checkType中的data使用时是怎么输入的，[null]是哪来的？fillStr吗？这里的data是经过fillData处理过的吗？
要开始看正则表达式
--------------------------------------------------------------2019.10.28

因为上个星期一直在看实验室的东西，装了六次虚拟机然后又装了三台虚拟机，被虚拟机榨干。。。
输入data时，缺省置为NULL还是；另外处理？checkType的fillStr就是[NULL]吗？如果是，就没必要设这个形参？
涉及到indexTree的使用，把fileLineNum函数写了，然后要开始转到indexTree类的编写
----------------------------------------------------------------2019.11.06
}
